{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sem-6\\\\SDP Project\\\\ChatBot\\\\chat-interface\\\\src\\\\chat-interface.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ChatInterface.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatInterface() {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const handleChange = e => {\n    setUserInput(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (userInput.trim() === '') return;\n    try {\n      const response = await fetch('http://localhost:4000/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: userInput\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch');\n      }\n      const data = await response.json();\n      const botResponse = data.message;\n      setChatHistory(prevHistory => [...prevHistory, {\n        text: userInput,\n        sender: 'user'\n      }, {\n        text: botResponse,\n        sender: 'bot'\n      }]);\n      setUserInput('');\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-history\",\n      children: chatHistory.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender === 'user' ? 'user' : 'bot'}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chat-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userInput,\n        onChange: handleChange,\n        placeholder: \"Type your message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatInterface, \"8JCQl5xD5McSCo8u2lCNzmk0Xrc=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatInterface","_s","userInput","setUserInput","chatHistory","setChatHistory","handleChange","e","target","value","handleSubmit","preventDefault","trim","response","fetch","method","headers","body","JSON","stringify","message","ok","Error","data","json","botResponse","prevHistory","text","sender","error","console","className","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["D:/Sem-6/SDP Project/ChatBot/chat-interface/src/chat-interface.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ChatInterface.css';\r\n\r\nfunction ChatInterface() {\r\n  const [userInput, setUserInput] = useState('');\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n\r\n  const handleChange = (e) => {\r\n    setUserInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (userInput.trim() === '') return;\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:4000/chat', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ message: userInput }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch');\r\n      }\r\n\r\n      const data = await response.json();\r\n      const botResponse = data.message;\r\n\r\n      setChatHistory((prevHistory) => [\r\n        ...prevHistory,\r\n        { text: userInput, sender: 'user' },\r\n        { text: botResponse, sender: 'bot' },\r\n      ]);\r\n\r\n      setUserInput('');\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-history\">\r\n        {chatHistory.map((message, index) => (\r\n          <div\r\n            key={index}\r\n            className={`message ${message.sender === 'user' ? 'user' : 'bot'}`}\r\n          >\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <form className=\"chat-form\" onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={userInput}\r\n          onChange={handleChange}\r\n          placeholder=\"Type your message\"\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatInterface;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}