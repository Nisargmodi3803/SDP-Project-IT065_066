{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sem-6\\\\SDP Project\\\\ChatBot\\\\chat-interface\\\\src\\\\chat-interface.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ChatInterface.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatInterface() {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const handleChange = e => {\n    setUserInput(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (userInput.trim() === '') return;\n\n    // Send user message to server\n    const response = await fetch('/chat', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message: userInput\n      })\n    });\n    const data = await response.json();\n    const botResponse = data.message;\n\n    // Update chat history\n    setChatHistory(prevHistory => [...prevHistory, {\n      text: userInput,\n      sender: 'user'\n    }, {\n      text: botResponse,\n      sender: 'bot'\n    }]);\n\n    // Clear user input\n    setUserInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-history\",\n      children: chatHistory.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender === 'user' ? 'user' : 'bot'}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chat-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userInput,\n        onChange: handleChange,\n        placeholder: \"Type your message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatInterface, \"8JCQl5xD5McSCo8u2lCNzmk0Xrc=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatInterface","_s","userInput","setUserInput","chatHistory","setChatHistory","handleChange","e","target","value","handleSubmit","preventDefault","trim","response","fetch","method","headers","body","JSON","stringify","message","data","json","botResponse","prevHistory","text","sender","className","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["D:/Sem-6/SDP Project/ChatBot/chat-interface/src/chat-interface.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ChatInterface.css';\r\n\r\nfunction ChatInterface() {\r\n  const [userInput, setUserInput] = useState('');\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n\r\n  const handleChange = (e) => {\r\n    setUserInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (userInput.trim() === '') return;\r\n\r\n    // Send user message to server\r\n    const response = await fetch('/chat', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ message: userInput }),\r\n    });\r\n\r\n    const data = await response.json();\r\n    const botResponse = data.message;\r\n\r\n    // Update chat history\r\n    setChatHistory((prevHistory) => [\r\n      ...prevHistory,\r\n      { text: userInput, sender: 'user' },\r\n      { text: botResponse, sender: 'bot' },\r\n    ]);\r\n\r\n    // Clear user input\r\n    setUserInput('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-history\">\r\n        {chatHistory.map((message, index) => (\r\n          <div\r\n            key={index}\r\n            className={`message ${message.sender === 'user' ? 'user' : 'bot'}`}\r\n          >\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <form className=\"chat-form\" onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={userInput}\r\n          onChange={handleChange}\r\n          placeholder=\"Type your message\"\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatInterface;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMS,YAAY,GAAIC,CAAC,IAAK;IAC1BJ,YAAY,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,CAAC,IAAK;IAChCA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,IAAIT,SAAS,CAACU,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;;IAE7B;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,OAAO,EAAE;MACpCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,OAAO,EAAElB;MAAU,CAAC;IAC7C,CAAC,CAAC;IAEF,MAAMmB,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IAClC,MAAMC,WAAW,GAAGF,IAAI,CAACD,OAAO;;IAEhC;IACAf,cAAc,CAAEmB,WAAW,IAAK,CAC9B,GAAGA,WAAW,EACd;MAAEC,IAAI,EAAEvB,SAAS;MAAEwB,MAAM,EAAE;IAAO,CAAC,EACnC;MAAED,IAAI,EAAEF,WAAW;MAAEG,MAAM,EAAE;IAAM,CAAC,CACrC,CAAC;;IAEF;IACAvB,YAAY,CAAC,EAAE,CAAC;EAClB,CAAC;EAED,oBACEJ,OAAA;IAAK4B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7B7B,OAAA;MAAK4B,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BxB,WAAW,CAACyB,GAAG,CAAC,CAACT,OAAO,EAAEU,KAAK,kBAC9B/B,OAAA;QAEE4B,SAAS,EAAG,WAAUP,OAAO,CAACM,MAAM,KAAK,MAAM,GAAG,MAAM,GAAG,KAAM,EAAE;QAAAE,QAAA,EAElER,OAAO,CAACK;MAAI,GAHRK,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIP,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNnC,OAAA;MAAM4B,SAAS,EAAC,WAAW;MAACQ,QAAQ,EAAEzB,YAAa;MAAAkB,QAAA,gBACjD7B,OAAA;QACEqC,IAAI,EAAC,MAAM;QACX3B,KAAK,EAAEP,SAAU;QACjBmC,QAAQ,EAAE/B,YAAa;QACvBgC,WAAW,EAAC;MAAmB;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACFnC,OAAA;QAAQqC,IAAI,EAAC,QAAQ;QAAAR,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACjC,EAAA,CA1DQD,aAAa;AAAAuC,EAAA,GAAbvC,aAAa;AA4DtB,eAAeA,aAAa;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}