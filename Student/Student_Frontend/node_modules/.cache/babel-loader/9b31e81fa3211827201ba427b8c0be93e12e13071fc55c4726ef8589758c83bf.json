{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sem-6\\\\SDP Project\\\\Student\\\\Student_Frontend\\\\src\\\\components\\\\AllCourses.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardActionArea from '@mui/material/CardActionArea';\nimport Typography from '@mui/material/Typography';\nimport SendIcon from '@mui/icons-material/Send';\nimport { Button, CardActions } from '@mui/material';\nimport './AllCourses.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllCourses = () => {\n  _s();\n  const [courses, setCourses] = useState([]);\n  let storedStudentDetails = localStorage.getItem('student');\n  try {\n    storedStudentDetails = JSON.parse(storedStudentDetails);\n  } catch (error) {\n    console.log(error);\n  }\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:4200/showCourses');\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        const data = await response.json();\n        setCourses(data.courses);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const enrollCourse = async courseId => {\n    console.log('Clicked on course with ID:', courseId);\n    const studentId = storedStudentDetails._id;\n    try {\n      const enrollResponse = await fetch(`http://localhost:4400/enrollCourse/${studentId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          courseId\n        }) // Pass courseId in the request body\n      });\n      if (!enrollResponse.ok) {\n        throw new Error('Failed to enroll in the course');\n      }\n      const responseData = await enrollResponse.json();\n      console.log(responseData);\n      alert(\"Enroll Course Successful\");\n      window.location.reload();\n    } catch (error) {\n      console.error('Error enrolling in the course:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"allcourse-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"course-container\",\n      children: Array.isArray(courses) && courses.length > 0 ? courses.map(course => /*#__PURE__*/_jsxDEV(Courses, {\n        id: course._id,\n        title: course.name,\n        description: course.description,\n        image: course.image,\n        onClick: () => enrollCourse(course._id)\n      }, course._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"No courses found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(AllCourses, \"Ks3haE1eP87BHv/TJ29co0rtnQM=\");\n_c = AllCourses;\nconst Courses = ({\n  id,\n  title,\n  description,\n  image,\n  onClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"course-card\",\n    children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        height: \"200\",\n        image: image,\n        alt: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        className: \"course-card-content\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"div\",\n          className: \"course-title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          className: \"course-description\",\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      className: \"course-actions\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \".enroll-button\",\n        size: \"small\",\n        color: \"primary\",\n        startIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 84\n        }, this),\n        onClick: onClick,\n        children: \"Enroll Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Courses;\nexport default AllCourses;\nvar _c, _c2;\n$RefreshReg$(_c, \"AllCourses\");\n$RefreshReg$(_c2, \"Courses\");","map":{"version":3,"names":["React","useEffect","useState","Card","CardContent","CardMedia","CardActionArea","Typography","SendIcon","Button","CardActions","jsxDEV","_jsxDEV","AllCourses","_s","courses","setCourses","storedStudentDetails","localStorage","getItem","JSON","parse","error","console","log","fetchData","response","fetch","ok","Error","data","json","enrollCourse","courseId","studentId","_id","enrollResponse","method","headers","body","stringify","responseData","alert","window","location","reload","className","children","Array","isArray","length","map","course","Courses","id","title","name","description","image","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","component","height","alt","variant","color","size","startIcon","_c2","$RefreshReg$"],"sources":["D:/Sem-6/SDP Project/Student/Student_Frontend/src/components/AllCourses.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport CardActionArea from '@mui/material/CardActionArea';\r\nimport Typography from '@mui/material/Typography';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { Button, CardActions } from '@mui/material';\r\nimport './AllCourses.css';\r\n\r\nconst AllCourses = () => {\r\n  const [courses, setCourses] = useState([]);\r\n\r\n  let storedStudentDetails = localStorage.getItem('student')\r\n  try {\r\n    storedStudentDetails = JSON.parse(storedStudentDetails);\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:4200/showCourses');\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch data');\r\n        }\r\n        const data = await response.json();\r\n        setCourses(data.courses);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n\r\n  }, []);\r\n\r\n  const enrollCourse = async (courseId) => {\r\n    console.log('Clicked on course with ID:', courseId);\r\n\r\n    const studentId = storedStudentDetails._id;\r\n\r\n    try {\r\n      const enrollResponse = await fetch(`http://localhost:4400/enrollCourse/${studentId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ courseId }) // Pass courseId in the request body\r\n      });\r\n\r\n      if (!enrollResponse.ok) {\r\n        throw new Error('Failed to enroll in the course');\r\n      }\r\n\r\n      const responseData = await enrollResponse.json();\r\n      console.log(responseData);\r\n      alert(\"Enroll Course Successful\")\r\n      window.location.reload();\r\n\r\n    } catch (error) {\r\n      console.error('Error enrolling in the course:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='allcourse-page'>\r\n      <div className=\"course-container\">\r\n        {Array.isArray(courses) && courses.length > 0 ? (\r\n          courses.map((course) => (\r\n            <Courses\r\n              key={course._id}\r\n              id={course._id}\r\n              title={course.name}\r\n              description={course.description}\r\n              image={course.image}\r\n              onClick={() => enrollCourse(course._id)}\r\n            />\r\n          ))\r\n        ) : (\r\n          <Typography>No courses found</Typography>\r\n        )}\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nconst Courses = ({ id, title, description, image, onClick }) => {\r\n  return (\r\n    <Card className=\"course-card\">\r\n      <CardActionArea >\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"200\"\r\n          image={image}\r\n          alt={title}\r\n        />\r\n        <CardContent className=\"course-card-content\">\r\n          <Typography variant=\"h5\" component=\"div\" className=\"course-title\">\r\n            {title}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\" className=\"course-description\">\r\n            {description}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions className=\"course-actions\">\r\n        <Button className='.enroll-button' size=\"small\" color=\"primary\" startIcon={<SendIcon />} onClick={onClick}>\r\n          Enroll Now\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AllCourses;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}