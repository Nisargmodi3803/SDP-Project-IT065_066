{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sem-6\\\\SDP Project\\\\StudentFrontend\\\\Student_Frontend\\\\src\\\\components\\\\AllCourses.jsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport SendIcon from '@mui/icons-material/Send';\nimport { useEffect, useState } from 'react';\nimport { Button, CardActionArea, CardActions } from '@mui/material';\n// import axios from 'axios';\n\n// Container component to hold the cards in a row\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CoursesRow = () => {\n  _s();\n  const [courses, setCourses] = useState([]); // State initialized as an empty array\n  // const [link, setLink] = useState('')\n  // const [title, setTitle] = useState('')\n  // const [description, setDescription] = useState('')\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:4200/showCourses');\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        const data = await response.json();\n        setCourses(data.courses);\n        console.log(data.courses); // Log updated courses\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleCourseClick = id => {\n    console.log('Clicked on course with ID:', id);\n    // Here you can perform any action you want with the ID, such as navigation or fetching more details\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      flexWrap: 'wrap',\n      alignItems: 'center'\n    },\n    children: Array.isArray(courses) && courses.length > 0 && courses.map((course, index) => /*#__PURE__*/_jsxDEV(Courses, {\n      id: course._id,\n      title: course.name,\n      description: course.description,\n      image: course.image,\n      onClick: handleCourseClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(CoursesRow, \"Ks3haE1eP87BHv/TJ29co0rtnQM=\");\n_c = CoursesRow;\nconst Courses = ({\n  id,\n  title,\n  description,\n  image\n}) => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      maxWidth: 345,\n      margin: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        height: \"200\",\n        image: image,\n        alt: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"div\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"primary\",\n        startIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 57\n        }, this),\n        children: \"enroll now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Courses;\nexport default CoursesRow;\nvar _c, _c2;\n$RefreshReg$(_c, \"CoursesRow\");\n$RefreshReg$(_c2, \"Courses\");","map":{"version":3,"names":["React","Card","CardContent","CardMedia","Typography","SendIcon","useEffect","useState","Button","CardActionArea","CardActions","jsxDEV","_jsxDEV","CoursesRow","_s","courses","setCourses","fetchData","response","fetch","ok","Error","data","json","console","log","error","handleCourseClick","id","style","display","justifyContent","flexWrap","alignItems","children","Array","isArray","length","map","course","index","Courses","_id","title","name","description","image","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","sx","maxWidth","margin","component","height","alt","gutterBottom","variant","color","size","startIcon","_c2","$RefreshReg$"],"sources":["D:/Sem-6/SDP Project/StudentFrontend/Student_Frontend/src/components/AllCourses.jsx"],"sourcesContent":["import * as React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Typography from '@mui/material/Typography';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { useEffect, useState } from 'react';\r\nimport { Button, CardActionArea, CardActions } from '@mui/material';\r\n// import axios from 'axios';\r\n\r\n// Container component to hold the cards in a row\r\nconst CoursesRow = () => {\r\n  const [courses, setCourses] = useState([]);  // State initialized as an empty array\r\n  // const [link, setLink] = useState('')\r\n  // const [title, setTitle] = useState('')\r\n  // const [description, setDescription] = useState('')\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:4200/showCourses');\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch data');\r\n        }\r\n        const data = await response.json();\r\n        setCourses(data.courses);\r\n        console.log(data.courses); // Log updated courses\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n\r\n  }, []);\r\n\r\n  const handleCourseClick = (id) => {\r\n    console.log('Clicked on course with ID:', id);\r\n    // Here you can perform any action you want with the ID, such as navigation or fetching more details\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex' , justifyContent: 'space-between',flexWrap: 'wrap',alignItems:'center' }}>\r\n      {Array.isArray(courses) && courses.length > 0 && courses.map((course, index) => (\r\n        <Courses\r\n          id={course._id}\r\n          title={course.name}\r\n          description={course.description}\r\n          image={course.image}\r\n          onClick={handleCourseClick}\r\n        />)\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Courses = ({ id,title, description, image }) => {\r\n  return (\r\n    <Card sx={{ maxWidth: 345,margin:5 }}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"200\"\r\n          image={image}\r\n          alt={title}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n            {title}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            {description}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\" startIcon={<SendIcon /> }>\r\n          enroll now\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\nexport default CoursesRow;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}