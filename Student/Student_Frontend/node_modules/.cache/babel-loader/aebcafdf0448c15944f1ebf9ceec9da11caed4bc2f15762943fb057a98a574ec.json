{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sem-6\\\\SDP Project\\\\Student\\\\Student_Frontend\\\\src\\\\components\\\\AllCourses.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport SendIcon from '@mui/icons-material/Send';\nimport { Button, CardActionArea, CardActions } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllCourses = () => {\n  _s();\n  const [courses, setCourses] = useState([]);\n  let storedStudentDetails = localStorage.getItem('student');\n  try {\n    storedStudentDetails = JSON.parse(storedStudentDetails);\n  } catch (error) {\n    console.log(error);\n  }\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:4200/showCourses');\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        const data = await response.json();\n        setCourses(data.courses);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const enrollCourse = async courseId => {\n    console.log('Clicked on course with ID:', courseId);\n    const studentId = storedStudentDetails._id;\n    try {\n      const enrollResponse = await fetch(`http://localhost:4400/enrollCourse/${studentId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          courseId\n        }) // Pass courseId in the request body\n      });\n      if (!enrollResponse.ok) {\n        throw new Error('Failed to enroll in the course');\n      }\n      const responseData = await enrollResponse.json();\n      console.log(responseData);\n      alert(\"Enroll Course Successful\");\n      window.location.reload();\n    } catch (error) {\n      console.error('Error enrolling in the course:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      flexWrap: 'wrap',\n      alignItems: 'center'\n    },\n    children: Array.isArray(courses) && courses.length > 0 ? courses.map(course => /*#__PURE__*/_jsxDEV(Courses, {\n      id: course._id,\n      title: course.name,\n      description: course.description,\n      image: course.image,\n      onClick: () => enrollCourse(course._id)\n    }, course._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"No courses found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(AllCourses, \"Ks3haE1eP87BHv/TJ29co0rtnQM=\");\n_c = AllCourses;\nconst Courses = ({\n  id,\n  title,\n  description,\n  image,\n  onClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      maxWidth: 345,\n      margin: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        height: \"200\",\n        image: image,\n        alt: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"div\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"primary\",\n        startIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 57\n        }, this),\n        onClick: onClick,\n        children: \"enroll now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Courses;\nexport default AllCourses;\nvar _c, _c2;\n$RefreshReg$(_c, \"AllCourses\");\n$RefreshReg$(_c2, \"Courses\");","map":{"version":3,"names":["React","useEffect","useState","Card","CardContent","CardMedia","Typography","SendIcon","Button","CardActionArea","CardActions","jsxDEV","_jsxDEV","AllCourses","_s","courses","setCourses","storedStudentDetails","localStorage","getItem","JSON","parse","error","console","log","fetchData","response","fetch","ok","Error","data","json","enrollCourse","courseId","studentId","_id","enrollResponse","method","headers","body","stringify","responseData","alert","window","location","reload","style","display","justifyContent","flexWrap","alignItems","children","Array","isArray","length","map","course","Courses","id","title","name","description","image","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","sx","maxWidth","margin","component","height","alt","gutterBottom","variant","color","size","startIcon","_c2","$RefreshReg$"],"sources":["D:/Sem-6/SDP Project/Student/Student_Frontend/src/components/AllCourses.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Typography from '@mui/material/Typography';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { Button, CardActionArea, CardActions } from '@mui/material';\r\n\r\nconst AllCourses = () => {\r\n  const [courses, setCourses] = useState([]);\r\n\r\n  let storedStudentDetails = localStorage.getItem('student')\r\n  try {\r\n    storedStudentDetails = JSON.parse(storedStudentDetails);\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:4200/showCourses');\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch data');\r\n        }\r\n        const data = await response.json();\r\n        setCourses(data.courses);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n\r\n  }, []);\r\n\r\n  const enrollCourse = async (courseId) => {\r\n    console.log('Clicked on course with ID:', courseId);\r\n    \r\n    const studentId = storedStudentDetails._id;\r\n  \r\n    try {\r\n      const enrollResponse = await fetch(`http://localhost:4400/enrollCourse/${studentId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ courseId }) // Pass courseId in the request body\r\n      });\r\n  \r\n      if (!enrollResponse.ok) {\r\n        throw new Error('Failed to enroll in the course');\r\n      }\r\n  \r\n      const responseData = await enrollResponse.json();\r\n      console.log(responseData);\r\n      alert(\"Enroll Course Successful\")\r\n      window.location.reload();\r\n  \r\n    } catch (error) {\r\n      console.error('Error enrolling in the course:', error);\r\n    }\r\n  };\r\n\r\n  \r\n  \r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap', alignItems: 'center' }}>\r\n      {Array.isArray(courses) && courses.length > 0 ? (\r\n          courses.map((course) => (\r\n            <Courses\r\n              key={course._id}\r\n              id={course._id}\r\n              title={course.name}\r\n              description={course.description}\r\n              image={course.image}\r\n              onClick={() => enrollCourse(course._id)}\r\n            />\r\n          ))\r\n        ) : (\r\n          <Typography>No courses found</Typography>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Courses = ({ id, title, description, image, onClick }) => {\r\n  return (\r\n    <Card sx={{ maxWidth: 345, margin: 5 }}>\r\n      <CardActionArea >\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"200\"\r\n          image={image}\r\n          alt={title}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n            {title}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            {description}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\" startIcon={<SendIcon />}  onClick={onClick}>\r\n          enroll now\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AllCourses;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}