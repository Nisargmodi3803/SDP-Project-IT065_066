{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sem-6\\\\SDP Project\\\\Student\\\\Student_Frontend\\\\src\\\\components\\\\EndrollCourses.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport SendIcon from '@mui/icons-material/Send';\nimport Lectures from './Lectures';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, CardActionArea, CardActions } from '@mui/material';\n\n// Container component to hold the cards in a row\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CoursesRow = () => {\n  _s();\n  let storedStudentDetails = localStorage.getItem('student');\n  try {\n    storedStudentDetails = JSON.parse(storedStudentDetails);\n  } catch (error) {\n    console.log(error);\n  }\n  const studnetId = storedStudentDetails._id;\n  const [endrolledCourses, setEndrolledCourses] = useState([]);\n  useEffect(() => {\n    const fetchData = async studnetId => {\n      try {\n        const response = await fetch(`http://localhost:4850/showEndrolledCourses/${studnetId}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        const data = await response.json();\n        setEndrolledCourses(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData(studnetId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      flexWrap: 'wrap',\n      alignItems: 'center'\n    },\n    children: Array.isArray(courses) && courses.length > 0 && courses.map((course, index) => /*#__PURE__*/_jsxDEV(Courses, {\n      id: course._id,\n      title: course.name,\n      description: course.description,\n      image: course.image,\n      onClick: () => enrollCourse(course._id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(CoursesRow, \"tsE1Kr8OSvk+l/imiDKxp/nbYYk=\");\n_c = CoursesRow;\nconst Courses = ({\n  title,\n  description,\n  image\n}) => {\n  _s2();\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      maxWidth: 345\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        height: \"140\",\n        image: image,\n        alt: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"div\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"primary\",\n        startIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 65\n        }, this),\n        onClick: () => {\n          navigate('watch');\n        },\n        children: \"Start Watching\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s2(Courses, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c2 = Courses;\nexport default CoursesRow;\nvar _c, _c2;\n$RefreshReg$(_c, \"CoursesRow\");\n$RefreshReg$(_c2, \"Courses\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardContent","CardMedia","Typography","SendIcon","Lectures","useNavigate","Button","CardActionArea","CardActions","jsxDEV","_jsxDEV","CoursesRow","_s","storedStudentDetails","localStorage","getItem","JSON","parse","error","console","log","studnetId","_id","endrolledCourses","setEndrolledCourses","fetchData","response","fetch","ok","Error","data","json","style","display","justifyContent","flexWrap","alignItems","children","Array","isArray","courses","length","map","course","index","Courses","id","title","name","description","image","onClick","enrollCourse","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s2","navigate","sx","maxWidth","component","height","alt","gutterBottom","variant","color","size","startIcon","_c2","$RefreshReg$"],"sources":["D:/Sem-6/SDP Project/Student/Student_Frontend/src/components/EndrollCourses.jsx"],"sourcesContent":["import * as React from 'react';\r\nimport { useState,useEffect } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Typography from '@mui/material/Typography';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport Lectures from './Lectures';\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport { Button, CardActionArea, CardActions } from '@mui/material';\r\n\r\n// Container component to hold the cards in a row\r\nconst CoursesRow = () => {\r\n    let storedStudentDetails = localStorage.getItem('student')\r\n    try {\r\n        storedStudentDetails = JSON.parse(storedStudentDetails);\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n    const studnetId = storedStudentDetails._id;\r\n\r\n    const [endrolledCourses,setEndrolledCourses] = useState([])\r\n    useEffect(() => {\r\n        const fetchData = async (studnetId) => {\r\n            try {\r\n                const response = await fetch(`http://localhost:4850/showEndrolledCourses/${studnetId}`);\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch data');\r\n                }\r\n                const data = await response.json();\r\n                setEndrolledCourses(data)\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData(studnetId);\r\n\r\n    }, []);\r\n    return (\r\n        <div style={{ display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap', alignItems: 'center' }}>\r\n        {Array.isArray(courses) && courses.length > 0 && courses.map((course, index) => (\r\n          <Courses\r\n            id={course._id}\r\n            title={course.name}\r\n            description={course.description}\r\n            image={course.image}\r\n            onClick={() => enrollCourse(course._id)}\r\n          />)\r\n        )}\r\n      </div>\r\n    );\r\n};\r\n\r\n\r\nconst Courses = ({ title, description, image }) => {\r\n    const navigate = useNavigate()\r\n    return (\r\n        <Card sx={{ maxWidth: 345 }}>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    height=\"140\"\r\n                    image={image}\r\n                    alt={title}\r\n                />\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                        {title}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        {description}\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n                <Button size=\"small\" color=\"primary\" startIcon={<SendIcon />} onClick={() => {\r\n                    navigate('watch')\r\n                }}>\r\n                    Start Watching\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default CoursesRow;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}