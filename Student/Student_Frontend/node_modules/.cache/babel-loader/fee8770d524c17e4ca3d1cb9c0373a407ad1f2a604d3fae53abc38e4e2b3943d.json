{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sem-6\\\\SDP Project\\\\Student\\\\Student_Frontend\\\\src\\\\components\\\\AllCourses.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n// import { useHistory } from 'react-router-dom';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport SendIcon from '@mui/icons-material/Send';\nimport { Button, CardActionArea, CardActions } from '@mui/material';\n\n// Container component to hold the cards in a row\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllCourses = () => {\n  _s();\n  const [courses, setCourses] = useState([]);\n  // const history = useHistory(); // Initialize history for navigation\n\n  let storedStudentDetails = localStorage.getItem('student');\n  try {\n    storedStudentDetails = JSON.parse(storedStudentDetails);\n  } catch (error) {\n    console.log(error);\n  }\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:4200/showCourses');\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        const data = await response.json();\n        setCourses(data.courses);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Function to handle course click\n  const handleCourseClick = async courseId => {\n    console.log('Clicked on course with ID:', courseId);\n\n    // Redirect to enrolled courses page with course ID as a query parameter\n    const studentId = storedStudentDetails._id;\n    try {\n      // Fetch course details\n      const courseResponse = await fetch(`http://localhost:4800/findCourse/${courseId}`);\n      if (!courseResponse.ok) {\n        throw new Error('Failed to fetch course data');\n      }\n      const courseData = await courseResponse.json();\n      console.log(courseData);\n      const _id = courseData._id;\n      const name = courseData.name;\n      const link = courseData.link;\n      const image = courseData.image;\n      const description = courseData.description;\n\n      // Enroll student in the course\n      const enrollResponse = await fetch(`http://localhost:4400/enrollCourse/${studentId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(_id, name, link, image, description) // Pass the entire courseData object\n      });\n      if (!enrollResponse.ok) {\n        throw new Error('Failed to enroll in the course');\n      }\n      const responseData = await enrollResponse.json();\n      console.log(responseData); // Handle success response\n    } catch (error) {\n      console.error('Error enrolling in the course:', error);\n      // Handle error - show an error message to the user\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      flexWrap: 'wrap',\n      alignItems: 'center'\n    },\n    children: Array.isArray(courses) && courses.length > 0 && courses.map((course, index) => /*#__PURE__*/_jsxDEV(Courses, {\n      id: course._id,\n      title: course.name,\n      description: course.description,\n      image: course.image,\n      onClick: () => handleCourseClick(course._id) // Pass a function that calls handleCourseClick with course ID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(AllCourses, \"Ks3haE1eP87BHv/TJ29co0rtnQM=\");\n_c = AllCourses;\nconst Courses = ({\n  id,\n  title,\n  description,\n  image,\n  onClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      maxWidth: 345,\n      margin: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n      onClick: onClick,\n      children: [\" \", /*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        height: \"200\",\n        image: image,\n        alt: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"div\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      onClick: onClick,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"primary\",\n        startIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 57\n        }, this),\n        children: \"enroll now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Courses;\nexport default AllCourses;\nvar _c, _c2;\n$RefreshReg$(_c, \"AllCourses\");\n$RefreshReg$(_c2, \"Courses\");","map":{"version":3,"names":["React","useEffect","useState","Card","CardContent","CardMedia","Typography","SendIcon","Button","CardActionArea","CardActions","jsxDEV","_jsxDEV","AllCourses","_s","courses","setCourses","storedStudentDetails","localStorage","getItem","JSON","parse","error","console","log","fetchData","response","fetch","ok","Error","data","json","handleCourseClick","courseId","studentId","_id","courseResponse","courseData","name","link","image","description","enrollResponse","method","headers","body","stringify","responseData","style","display","justifyContent","flexWrap","alignItems","children","Array","isArray","length","map","course","index","Courses","id","title","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","sx","maxWidth","margin","component","height","alt","gutterBottom","variant","color","size","startIcon","_c2","$RefreshReg$"],"sources":["D:/Sem-6/SDP Project/Student/Student_Frontend/src/components/AllCourses.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n// import { useHistory } from 'react-router-dom';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Typography from '@mui/material/Typography';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { Button, CardActionArea, CardActions } from '@mui/material';\r\n\r\n// Container component to hold the cards in a row\r\nconst AllCourses = () => {\r\n  const [courses, setCourses] = useState([]);\r\n  // const history = useHistory(); // Initialize history for navigation\r\n\r\n  let storedStudentDetails = localStorage.getItem('student')\r\n  try {\r\n    storedStudentDetails = JSON.parse(storedStudentDetails);\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:4200/showCourses');\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch data');\r\n        }\r\n        const data = await response.json();\r\n        setCourses(data.courses);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n\r\n  }, []);\r\n\r\n  // Function to handle course click\r\n  const handleCourseClick = async (courseId) => {\r\n    console.log('Clicked on course with ID:', courseId);\r\n    \r\n    // Redirect to enrolled courses page with course ID as a query parameter\r\n    const studentId = storedStudentDetails._id;\r\n  \r\n    try {\r\n      // Fetch course details\r\n      const courseResponse = await fetch(`http://localhost:4800/findCourse/${courseId}`);\r\n      if (!courseResponse.ok) {\r\n        throw new Error('Failed to fetch course data');\r\n      }\r\n      const courseData = await courseResponse.json();\r\n      console.log(courseData)\r\n      const _id = courseData._id\r\n      const name = courseData.name\r\n      const link = courseData.link\r\n      const image = courseData.image\r\n      const description = courseData.description\r\n\r\n      // Enroll student in the course\r\n      const enrollResponse = await fetch(`http://localhost:4400/enrollCourse/${studentId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(_id,name,link,image,description) // Pass the entire courseData object\r\n      });\r\n  \r\n      if (!enrollResponse.ok) {\r\n        throw new Error('Failed to enroll in the course');\r\n      }\r\n  \r\n      const responseData = await enrollResponse.json();\r\n      console.log(responseData); // Handle success response\r\n  \r\n    } catch (error) {\r\n      console.error('Error enrolling in the course:', error);\r\n      // Handle error - show an error message to the user\r\n    }\r\n  };\r\n  \r\n  \r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap', alignItems: 'center' }}>\r\n      {Array.isArray(courses) && courses.length > 0 && courses.map((course, index) => (\r\n        <Courses\r\n          id={course._id}\r\n          title={course.name}\r\n          description={course.description}\r\n          image={course.image}\r\n          onClick={() => handleCourseClick(course._id)} // Pass a function that calls handleCourseClick with course ID\r\n        />)\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Courses = ({ id, title, description, image, onClick }) => {\r\n  return (\r\n    <Card sx={{ maxWidth: 345, margin: 5 }}>\r\n      <CardActionArea onClick={onClick}> {/* Pass onClick handler */}\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"200\"\r\n          image={image}\r\n          alt={title}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n            {title}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            {description}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions onClick={onClick}>\r\n        <Button size=\"small\" color=\"primary\" startIcon={<SendIcon />}>\r\n          enroll now\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AllCourses;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}