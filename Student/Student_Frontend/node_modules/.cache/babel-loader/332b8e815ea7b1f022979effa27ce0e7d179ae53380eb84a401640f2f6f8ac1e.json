{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sem-6\\\\SDP Project\\\\StudentFrontend\\\\Student_Frontend\\\\src\\\\components\\\\AllCourses.jsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport SendIcon from '@mui/icons-material/Send';\nimport { useEffect, useState } from 'react';\nimport { Button, CardActionArea, CardActions } from '@mui/material';\nimport axios from 'axios';\n\n// Container component to hold the cards in a row\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CoursesRow = () => {\n  _s();\n  const [courses, setCourses] = useState([]); // State initialized as an empty array\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    //   try {\n    //     const response = await axios.get(\"http://localhost:4200/showCourses\");\n    //     if (Array.isArray(response.data)) {\n    //       setCourses(response.data); // Assuming your courses array is directly in response.data\n    //     } else {\n    //       console.error('Unexpected data format:', response.data);\n    //     }\n    //   } catch (error) {\n    //     console.error('Error fetching courses:', error);\n    //   }\n    // };\n    let result = await fetch('http://localhost:4200/showCourses');\n    result = await result.json();\n    setCourses(result);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: courses.map((course, index) => /*#__PURE__*/_jsxDEV(Courses, {\n        title: course.name,\n        description: course.description,\n        image: course.link\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  };\n  const Courses = ({\n    title,\n    description,\n    image\n  }) => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 345\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          height: \"140\",\n          image: image,\n          alt: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h5\",\n            component: \"div\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          color: \"primary\",\n          startIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 59\n          }, this),\n          children: \"enroll now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  };\n};\n_s(CoursesRow, \"Ks3haE1eP87BHv/TJ29co0rtnQM=\");\n_c = CoursesRow;\nexport default CoursesRow;\nvar _c;\n$RefreshReg$(_c, \"CoursesRow\");","map":{"version":3,"names":["React","Card","CardContent","CardMedia","Typography","SendIcon","useEffect","useState","Button","CardActionArea","CardActions","axios","jsxDEV","_jsxDEV","CoursesRow","_s","courses","setCourses","fetchData","result","fetch","json","style","display","justifyContent","children","map","course","index","Courses","title","name","description","image","link","fileName","_jsxFileName","lineNumber","columnNumber","sx","maxWidth","component","height","alt","gutterBottom","variant","color","size","startIcon","_c","$RefreshReg$"],"sources":["D:/Sem-6/SDP Project/StudentFrontend/Student_Frontend/src/components/AllCourses.jsx"],"sourcesContent":["import * as React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Typography from '@mui/material/Typography';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { useEffect, useState } from 'react';\r\nimport { Button, CardActionArea, CardActions } from '@mui/material';\r\nimport axios from 'axios';\r\n\r\n// Container component to hold the cards in a row\r\nconst CoursesRow = () => {\r\n  const [courses, setCourses] = useState([]); // State initialized as an empty array\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    //   try {\r\n    //     const response = await axios.get(\"http://localhost:4200/showCourses\");\r\n    //     if (Array.isArray(response.data)) {\r\n    //       setCourses(response.data); // Assuming your courses array is directly in response.data\r\n    //     } else {\r\n    //       console.error('Unexpected data format:', response.data);\r\n    //     }\r\n    //   } catch (error) {\r\n    //     console.error('Error fetching courses:', error);\r\n    //   }\r\n    // };\r\n    let result = await fetch('http://localhost:4200/showCourses')\r\n    result = await result.json()\r\n    setCourses(result)\r\n\r\n    return (\r\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        {courses.map((course, index) => (\r\n          <Courses\r\n            key={index}\r\n            title={course.name}\r\n            description={course.description}\r\n            image={course.link}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const Courses = ({ title, description, image }) => {\r\n    return (\r\n      <Card sx={{ maxWidth: 345 }}>\r\n        <CardActionArea>\r\n          <CardMedia\r\n            component=\"img\"\r\n            height=\"140\"\r\n            image={image}\r\n            alt={title}\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n              {title}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              {description}\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions>\r\n          <Button size=\"small\" color=\"primary\" startIcon={<SendIcon />}>\r\n            enroll now\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    );\r\n  };\r\n}\r\n  export default CoursesRow;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}