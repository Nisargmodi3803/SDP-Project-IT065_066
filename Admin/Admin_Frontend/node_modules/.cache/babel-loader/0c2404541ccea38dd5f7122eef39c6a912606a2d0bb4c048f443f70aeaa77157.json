{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sem-6\\\\SDP Project\\\\Admin\\\\Admin_Frontend\\\\src\\\\components\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Login.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const admin = localStorage.getItem('admin');\n    if (admin) {\n      navigate('/showAllCourses');\n    }\n  }, [navigate]);\n  const handleLogin = async () => {\n    try {\n      let result = await fetch('http://localhost:5501/login', {\n        method: 'POST',\n        body: JSON.stringify({\n          email,\n          password\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (result.ok) {\n        const data = await result.json();\n        if (data) {\n          localStorage.setItem('admin', JSON.stringify(data));\n          navigate('/showAllCourses');\n        } else {\n          alert('Please enter correct details');\n        }\n      } else {\n        throw new Error('Network response was not ok.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      // Handle error (e.g., show an error message to the user)\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginPage\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        handleLogin();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputBox\",\n        type: \"email\",\n        placeholder: \"Enter your Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 56\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputBox\",\n        type: \"password\",\n        placeholder: \"Enter Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 59\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"P8N6aOEN8VF4cvKL87x4xkvKyJc=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","navigate","admin","localStorage","getItem","handleLogin","result","fetch","method","body","JSON","stringify","headers","ok","data","json","setItem","alert","Error","error","console","className","children","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Sem-6/SDP Project/Admin/Admin_Frontend/src/components/Login.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Login.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function Login() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const admin = localStorage.getItem('admin');\r\n    if (admin) {\r\n      navigate('/showAllCourses');\r\n    }\r\n  }, [navigate]);\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      let result = await fetch('http://localhost:5501/login', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ email, password }),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n      });\r\n\r\n      if (result.ok) {\r\n        const data = await result.json();\r\n        if (data) {\r\n          localStorage.setItem('admin', JSON.stringify(data));\r\n          navigate('/showAllCourses');\r\n        } else {\r\n          alert('Please enter correct details');\r\n        }\r\n      } else {\r\n        throw new Error('Network response was not ok.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      // Handle error (e.g., show an error message to the user)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='loginPage'>\r\n      <form onSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleLogin();\r\n      }}>\r\n        <input className='inputBox'\r\n          type='email'\r\n          placeholder='Enter your Email'\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)} /><br></br>\r\n\r\n        <input className='inputBox'\r\n          type='password'\r\n          placeholder='Enter Password'\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)} /><br></br>\r\n        <button type='submit'>Log in</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}